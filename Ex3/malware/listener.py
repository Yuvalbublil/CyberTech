import socket
import pydivert
from settings import PORTS, COMMAND_PORT
from typing import Callable

BUFSIZE = 1024
HOST = "127.0.0.1"


def listen_for_commands(on_recv: Callable[[str], bytes]) -> None:
    """
        This function waits for the correct pattern of port knocks and then opens the COMMAND_PORT to recieve commands.
        The commands are then passed to the on_recv function and the response is sent back to the client.
    """
    for port in PORTS:
        with pydivert.WinDivert(filter="tcp.DstPort == {}".format(port)) as w:
            w.recv()
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((HOST, COMMAND_PORT))
    server_socket.listen()
    conn, _ = server_socket.accept()
    b = bytes()
    with conn:
        data = conn.recv(BUFSIZE)
        server_socket.send(on_recv(data.decode('utf-8')))
